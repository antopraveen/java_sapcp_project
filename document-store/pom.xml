<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.sap.cloud.sample</groupId>
        <artifactId>sdk-samples-parent</artifactId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>document-store</artifactId>
    <packaging>war</packaging>

    <description>This sample demonstrates how to manage unstructured content in your Web application.</description>
    <licenses>
        <license>
            <name>SAP DEVELOPER LICENSE AGREEMENT</name>
            <url>https://tools.hana.ondemand.com/developer-license-3.1.txt</url>
        </license>
    </licenses>

    <profiles>
        <profile>
            <id>local-integration-tests</id>
            <build>
                <plugins>
                    <!-- Install test user called John Doe (username is john and password is doe) for local integration testing -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>prepare-local-application</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <copy file="${basedir}/neogroups.json"
                                            tofile="${local.server.root}/config_master/com.sap.security.um.provider.neo.local/neogroups.json"
                                            failonerror="true" overwrite="true">
                                        </copy>
                                        <copy file="${basedir}/neousers.json"
                                            tofile="${local.server.root}/config_master/com.sap.security.um.provider.neo.local/neousers.json"
                                            failonerror="true" overwrite="true">
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Starts/stops Mongo DB before/after local integration testing -->
                    <plugin>
                        <groupId>com.github.joelittlejohn.embedmongo</groupId>
                        <artifactId>embedmongo-maven-plugin</artifactId>
                        <version>0.1.12</version>
                        <executions>
                            <execution>
                                <id>start-mongo-db</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-mongo-db</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <port>27017</port>
                            <databaseDirectory>${project.build.directory}/mongo-db</databaseDirectory>
                            <logging>none</logging>
                            <proxyHost>${https.proxyHost}</proxyHost>
                            <proxyPort>${https.proxyPort}</proxyPort>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
